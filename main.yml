---
- name: DotFiles Config
  hosts: all
  become_user: yes

  tasks:
    - name: Find all roles in the roles directory
      ansible.builtin.find:
        paths: "{{ playbook_dir }}/roles"
        file_type: directory
        recurse: no
      register: found_roles
      tags:
        - always

    - name: Set dynamic roles
      ansible.builtin.set_fact:
        all_roles: "{{ found_roles.files | map(attribute='path') | map('basename') | list }}"
      tags:
        - always

    - name: Set roles
      ansible.builtin.set_fact:
        run_roles: >-
          {{
            (ansible_run_tags == ['all'] and all_roles or ansible_run_tags) |
            difference(exclude_roles | default([]))
          }}
      tags:
        - always

    - name: Display roles
      ansible.builtin.debug:
        var: run_roles
      tags:
        - always

    - name: "Determine Tasks File Based on Distribution"
      ansible.builtin.set_fact:
        os_family: "{{ 'Debian.yml' if ansible_facts['os_family'] == 'Debian' else
                      'RedHat.yml' if ansible_facts['os_family'] == 'RedHat' else
                      'Archlinux.yml' if ansible_facts['os_family'] == 'Archlinux' else
                      'linux.yml' }}" 

    - name: Run roles
      ansible.builtin.include_role:
        apply:
          tags:
            - "{{ roles_item }}"
            - all
        name: "{{ roles_item }}"
      loop_control:
        loop_var: roles_item
      with_items: "{{ run_roles }}"
      tags:
        - always
