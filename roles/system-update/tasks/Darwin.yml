---
- name: "System Update | {{ ansible_distribution }} | Update Homebrew"
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true

- name: "System Update | {{ ansible_distribution }} | Update Homebrew Casks"
  community.general.homebrew_cask:
    upgrade_all: true

- name: "System Update | {{ ansible_distribution }} | Update Neovim config"
  ansible.builtin.shell: nvim --headless "+Lazy! sync" "+TSUpdate" "+MasonUpdateAll" +qa

- name: "System Update | {{ ansible_distribution }} | Update Oh-My-ZSH"
  ansible.builtin.shell: $ZSH/tools/upgrade.sh
  args:
    executable: /bin/zsh

- name: "System Update | {{ ansible_distribution }} | Check for Software Updates"
  ansible.builtin.command: softwareupdate -l
  register: update_list
  become: yes
  become_user: root

- name: "System Update | {{ ansible_distribution }} | Download System Update"
  ansible.builtin.command: softwareupdate -d -a --agree-to-license
  become: yes
  become_user: root
  when: update_list.stdout.find("No new software available") == -1

- name: "System Update | {{ ansible_distribution }} | Install System Update"
  ansible.builtin.command: softwareupdate -i --agree-to-license
  become: yes
  become_user: root
  when: update_list.stdout.find("No new software available") == -1
