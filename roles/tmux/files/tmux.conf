# Create a new session, if one doesn't exist
new-session -n $HOST -s "local"

# Change prefix key
if-shell 'echo $SSH_TTY' 'set -g prefix C-f' 'set -g prefix C-b'

# Color support
set -g default-terminal "xterm-256color"

# Set focus events (for autoread)
set-option -g focus-events on

# Mouse support
set -g mouse on
setw -g mode-keys vi

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# When closing window 2, renumber window 3 to 2 to avoid window number gaps
set-option -g renumber-windows on

# Prevent from detaching when last window is killed
set-option -g detach-on-destroy off

# Reload config with <prefix>-r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded!"

# Session bindings
# Open new session from the current window's working dir
bind-key C run-shell -b "$XDG_CONFIG_HOME/tmux/scripts/tmux-new-dir-session.sh"
bind-key E run-shell -b "$XDG_CONFIG_HOME/tmux/scripts/tmux-new-user-session.sh"

# Switch session
# bind S display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# Set vim as default editor
set -g status-keys vi

# Set bg color for active window
# set -g window-status-current-bg magenta

# The statusbar 
# Status bar at the top doesn't break Jetbrains's Terminal
set -g status-position top
set -g status-style bg=black,fg=white
set -g status-left ''
set -g status-right '#[default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -c -p -i 5) #{?client_prefix,#[fg=white]#[bg=red]#[bold] - PREFIX - ,#[fg=brightwhite]#H}'
set -g status-interval 5

set -g status-right-length 90
set -g status-left-length 20

# PgUp/PgDown should work
set-environment -gr TERMINFO

# Remove ESC time listener
set -sg escape-time 0

# Copy Mode settings
setw -g mode-keys vi

bind v copy-mode
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

# Fix Vim/Neovim issue
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Restore vim sessions with tmux-resurrect plugin
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Use HJKL to navigate windows
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Session restore
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Automatic session restore
set -g @continuum-restore 'on'

# tmux-fuzzback uses a fuzzy finder to search terminal scrollback buffer, and jump to selected position.
set -g @fuzzback-bind F # Bind to F
set -g @plugin 'roosta/tmux-fuzzback'

# Yank support
# Requires `wl-copy` from `wl-clipboard` package (Linux)
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'primary' # or 'clipboard' or 'secondary'
set -g @yank_action 'copy-pipe-and-cancel' # or 'copy-pipe' for the default
set -g @yank_with_mouse on # or 'off'
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
